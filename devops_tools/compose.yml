version: "3"

services:
  sonarqube:
    image: sonarqube:community
    restart: always
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    expose:
      - 9000
    ports:
      - "127.0.0.1:9000:9000"
    networks:
      - sonarnet
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins

  db:
    image: postgres:12-alpine
    restart: always
    networks:
      - sonarnet
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

  db2:
    image: postgres:12-alpine
    restart: always

  # Container CLI to run sonarqube to analyze source code
  #
  # sonarqube-cli:
  #   image: sonarsource/sonar-scanner-cli
  #   networks:
  #     - sonarnet
  #   environment:
  #     SONAR_HOST_URL: "http://sonarqube:9000"
  #     SONAR_SCANNER_OPTS: "-Dsonar.projectKey=<project>"
  #     SONAR_LOGIN: "<token>"
  #   volumes:
  #    - "./:/usr/src"

networks:
  sonarnet:

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins:
  postgresql:
  postgresql_data:

# Notes:
# - Pre-requirements:
#     sysctl -w vm.max_map_count=524288
#     sysctl -w fs.file-max=131072
#     ulimit -n 131072
#     ulimit -u 8192
# default user/pass: admin/admin
# Referencies:
# - https://docs.sonarqube.org/latest/requirements/prerequisites-and-overview/
# - https://github.com/OdesWiki/Instalar-SonarQube-en-Docker